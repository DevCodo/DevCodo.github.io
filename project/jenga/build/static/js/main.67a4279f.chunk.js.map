{"version":3,"sources":["App.js","index.js"],"names":["Box","useBox","mass","position","ref","api","onClick","velocity","set","attach","color","Plane","usePlane","rotation","Math","PI","args","App","frameloop","gl","alpha","camera","fov","Stars","OrbitControls","mouseButtons","RIGHT","MOUSE","ROTATE","intensity","angle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAKMA,EAAM,WAAO,IAAD,EACGC,aAAO,iBAAO,CAAEC,KAAM,EAAGC,SAAU,CAAC,EAAG,EAAG,OAD7C,mBACTC,EADS,KACJC,EADI,KAEhB,OACE,uBAAMD,IAAKA,EAAKD,SAAU,CAAC,EAAG,EAAG,GAAIG,QAAS,kBAAMD,EAAIE,SAASC,IAAI,EAAG,EAAG,IAA3E,UACE,mCAAmBC,OAAO,aAC1B,qCAAqBA,OAAO,WAAWC,MAAM,kBAK7CC,EAAQ,WAAO,IAAD,EACJC,aAAS,iBAAO,CAAEC,SAAU,CAAW,IAAVC,KAAKC,GAAU,EAAG,OAAtDX,EADW,oBAElB,OACE,uBAAMA,IAAKA,EAAKD,SAAU,CAAC,EAAG,EAAG,GAAIU,SAAU,CAAW,IAAVC,KAAKC,GAAU,EAAG,GAAlE,UACE,qCAAqBN,OAAO,WAAWO,KAAM,CAAC,IAAK,OACnD,qCAAqBP,OAAO,WAAWC,MAAM,cA8BpCO,EAzBH,WACV,OACE,eAAC,IAAD,CACEC,UAAU,SAGVC,GAAI,CAAEC,OAAO,GACbC,OAAQ,CAAElB,SAAU,EAAE,EAAG,EAAG,GAAImB,IAAK,KALvC,UAOE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEC,aAAc,CACZC,MAAOC,QAAMC,UAGjB,8BAAcC,UAAW,KACzB,2BAAW1B,SAAU,CAAC,GAAI,GAAI,IAAK2B,MAAO,KAC1C,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,WCvCRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.67a4279f.chunk.js","sourcesContent":["import { Canvas } from 'react-three-fiber'\nimport { OrbitControls, Stars } from '@react-three/drei'\nimport { MOUSE } from 'three'\nimport { Physics, useBox, usePlane } from '@react-three/cannon'\n\nconst Box = () => {\n  const [ref, api] = useBox(() => ({ mass: 1, position: [0, 2, 0] }))\n  return (\n    <mesh ref={ref} position={[0, 2, 0]} onClick={() => api.velocity.set(1, 2, 1)}>\n      <boxBufferGeometry attach=\"geometry\" />\n      <meshLambertMaterial attach=\"material\" color=\"lightblue\" />\n    </mesh>\n  )\n}\n\nconst Plane = () => {\n  const [ref] = usePlane(() => ({ rotation: [Math.PI * 1.5, 0, 0] }))\n  return (\n    <mesh ref={ref} position={[0, 0, 0]} rotation={[Math.PI * 1.5, 0, 0]}>\n      <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\n      <meshLambertMaterial attach=\"material\" color=\"green\" />\n    </mesh>\n  )\n}\n\nconst App = () => {\n  return (\n    <Canvas\n      frameloop=\"always\"\n      // shadowMap\n      // colorManagement\n      gl={{ alpha: false }}\n      camera={{ position: [-1, 2, 4], fov: 100 }}\n    >\n      <Stars />\n      <OrbitControls\n        mouseButtons={{\n          RIGHT: MOUSE.ROTATE,\n        }}\n      />\n      <ambientLight intensity={0.5} />\n      <spotLight position={[10, 15, 10]} angle={0.3} />\n      <Physics>\n        <Box />\n        <Plane />\n      </Physics>\n    </Canvas>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}